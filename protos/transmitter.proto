syntax = "proto3";

package model;
option csharp_namespace = "LanDataTransmitter.Model";

service Transmitter {
    rpc Connect (ConnectRequest) returns (ConnectReply);
    rpc Disconnect (DisconnectRequest) returns (DisconnectReply);
    rpc PushText (PushTextRequest) returns (PushTextReply); // C -> S
    rpc Pull (PullRequest) returns (stream PullReply); // C <- S
}

// Connect

message ConnectRequest {
    string clientName = 1;
}

message ConnectReply {
    bool accepted = 1;
    string clientId = 2;
}

// Disconnect

message DisconnectRequest {
    string clientId = 1;
}

message DisconnectReply {
    bool accepted = 1;
}

// PushText (C -> S)

message PushTextRequest {
    string clientId = 1;
    uint64 timestamp = 2;
    string text = 3;
}

message PushTextReply {
    bool accepted = 1;
    string messageId = 2;
}

// Pull (C <- S)

message PullRequest {
    string clientId = 1;
}

message PullReply {
    bool accepted = 1;
    PulledType type = 2;
    oneof data {
        PulledDisconnectReply disconnect = 3;
        PulledTextReply text = 4;
    }
}

enum PulledType {
    DISCONNECT = 0;
    TEXT = 1;
}

message PulledDisconnectReply {
    bool disconnect = 1; // always true, means server wants to disconnect client
}

message PulledTextReply {
    string messageId = 1;
    string text = 2;
    uint64 timestamp = 3;
}
